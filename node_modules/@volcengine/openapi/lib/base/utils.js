"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultOption = exports.createDebug = exports.packageVersion = exports.packageName = void 0;
const debug_1 = __importDefault(require("debug"));
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const package_json_1 = __importDefault(require("../../package.json"));
exports.packageName = package_json_1.default.name;
exports.packageVersion = package_json_1.default.version;
function createDebug(moduleName) {
    return (0, debug_1.default)(`${exports.packageName}:${moduleName}`);
}
exports.createDebug = createDebug;
function getDefaultOption() {
    const defaultOptions = {
        host: "open.volcengineapi.com",
        region: "cn-north-1",
        protocol: "https:",
        // Read aksk by environment variables
        accessKeyId: process.env.VOLC_ACCESSKEY,
        secretKey: process.env.VOLC_SECRETKEY,
    };
    try {
        // Read aksk from ~/.volc/config. Priority is lower than environment variables
        if (process.env.HOME && !(defaultOptions.accessKeyId && defaultOptions.secretKey)) {
            const homeConfigPath = path_1.default.resolve(process.env.HOME, ".volc/config");
            if (fs_1.default.existsSync(homeConfigPath)) {
                const configData = JSON.parse(fs_1.default.readFileSync(homeConfigPath, { encoding: "utf-8" }));
                if (!defaultOptions.accessKeyId && configData.VOLC_ACCESSKEY) {
                    defaultOptions.accessKeyId = configData.VOLC_ACCESSKEY;
                }
                if (!defaultOptions.secretKey && configData.VOLC_SECRETKEY) {
                    defaultOptions.secretKey = configData.VOLC_SECRETKEY;
                }
            }
        }
    }
    catch (_a) { }
    return defaultOptions;
}
exports.getDefaultOption = getDefaultOption;
//# sourceMappingURL=utils.js.map