import Service from "../../base/service";
import { ServiceOptions } from "../../base/types";
import { SubmitDirectEditTaskAsyncParams, SubmitDirectEditTaskAsyncResult, GetDirectEditResultParams, DirectEditResult, SubmitTemplateTaskAsyncParams, SubmitTemplateTaskAsyncResult } from "./types";
export declare class EditService extends Service {
    constructor(options?: ServiceOptions);
    SubmitDirectEditTaskAsync: (requestData: SubmitDirectEditTaskAsyncParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<SubmitDirectEditTaskAsyncResult>>;
    GetDirectEditResult: (requestData: GetDirectEditResultParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<DirectEditResult[]>>;
    SubmitTemplateTaskAsync: (requestData: SubmitTemplateTaskAsyncParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<SubmitTemplateTaskAsyncResult>>;
}
export declare const defaultService: EditService;
