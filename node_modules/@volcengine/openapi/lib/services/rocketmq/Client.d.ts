import { SendRequestOptions } from "./utils/request";
import { ClientOptions, ConsumerOptions } from "./types";
import { Consumer } from "./Consumer";
import { Producer } from "./Producer";
interface ClientRequestOption<Req> extends Omit<SendRequestOptions, "url" | "data"> {
    path: string;
    data: Omit<Req, "requestId">;
}
export declare class Client {
    private _endpoint;
    private _instanceId;
    private _accessKey;
    private _secretKey;
    constructor(options: ClientOptions);
    get VERSION(): string;
    get SESSION_TIMEOUT(): number;
    createProducer(): Producer;
    createConsumer(options: ConsumerOptions): Consumer;
    _request<Req, Resp = void>(options: ClientRequestOption<Req>): Promise<Resp>;
    getTopicId(topic: string): string;
    getGroupId(group: string): string;
    private _createRequestId;
    private _sign;
}
export {};
