import Service from "../../base/service";
import { ServiceOptions } from "../../base/types";
import { StartRecordParams, StopRecordParams, GetRecordTaskParams, GetRecordTaskResult } from "./types";
export declare class RtcService extends Service {
    constructor(options?: ServiceOptions);
    StartRecord: (requestData: StartRecordParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<string>>;
    StopRecord: (requestData: StopRecordParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<string>>;
    GetRecordTask: (requestData: GetRecordTaskParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<GetRecordTaskResult>>;
}
export declare const defaultService: RtcService;
