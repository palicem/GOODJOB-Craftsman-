import Service from "../../base/service";
import { ServiceOptions } from "../../base/types";
interface AssumeRoleParams {
    RoleTrn: string;
    RoleSessionName: string;
    DurationSeconds?: number;
    Policy?: string;
}
interface AssumeRoleResult {
    Credentials: {
        CurrentTime: string;
        ExpiredTime: string;
        AccessKeyId: string;
        SecretAccessKey: string;
        SessionToken: string;
    };
    AssumedRoleUser: {
        Trn: string;
        AssumedRoleId: string;
    };
}
export declare class StsService extends Service {
    constructor(options?: ServiceOptions);
    AssumeRole: (requestData: AssumeRoleParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<AssumeRoleResult>>;
}
export declare const defaultService: StsService;
export {};
