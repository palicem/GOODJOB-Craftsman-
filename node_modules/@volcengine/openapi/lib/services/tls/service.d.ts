/// <reference types="node" />
/// <reference types="node" />
import { AxiosRequestConfig } from "axios";
import { IPutLogsReq, IPutLogsResp, LogGroupList, Protocol, TlsCreateAPIParams, TlsServiceOptions } from "./types";
export default class Service {
    constructor(options: TlsServiceOptions);
    private options;
    setRegion: (region: string) => void;
    setHost: (host: string) => string;
    setVersion: (version: string) => string;
    setProtocol: (protocol: Protocol) => Protocol;
    setAccessKeyId: (accessKeyId: string) => string;
    setSecretKey: (secretKey: string) => string;
    setSessionToken: (sessionToken: string) => string;
    static fetch<Result>(uri: string, requestObj: any): Promise<Result>;
    /**
     * transfer json to protobuf buffer
     */
    static objToProtoBuffer(obj: LogGroupList): Promise<Uint8Array>;
    static LZ4Compress(input: any): Buffer;
    createAPI<RequestData, Result>(Path: string, createParams?: TlsCreateAPIParams): (requestData: RequestData, config?: AxiosRequestConfig) => Promise<Result>;
    createPutLogsAPI(Path: string): (requestData: IPutLogsReq, config?: AxiosRequestConfig) => Promise<IPutLogsResp>;
}
