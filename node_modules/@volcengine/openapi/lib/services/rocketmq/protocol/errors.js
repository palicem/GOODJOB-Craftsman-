"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ErrorCode = void 0;
var ErrorCode;
(function (ErrorCode) {
    ErrorCode["Success"] = "0";
    ErrorCode["InvalidParameter"] = "100000";
    ErrorCode["TopicNotExist"] = "100001";
    ErrorCode["GroupNotExist"] = "100002";
    ErrorCode["UnsurpportedClientType"] = "100003";
    ErrorCode["NoAccessPermissionForTopic"] = "100004";
    ErrorCode["NoAccessPermissionForGroup"] = "100005";
    ErrorCode["InvalidProperties"] = "100006";
    ErrorCode["ClientNotFound"] = "100007";
    ErrorCode["ReqBodyNotExist"] = "100008";
    ErrorCode["InternalServerError"] = "100009";
    ErrorCode["ClientHasTaskRunning"] = "100010";
    ErrorCode["ReqBodyTooLarge"] = "100011";
    ErrorCode["AckMessageError"] = "100012";
    ErrorCode["UnknownError"] = "100013";
    // 拉取消息的参数不合法
    ErrorCode["InvalidPollRequestParameter"] = "100018";
    ErrorCode["ProducerGroupHasAlreadyExist"] = "100019";
    // 延时等级不合法
    ErrorCode["InvalidDelayTimeLevel"] = "100020";
    // 下面号段的errorCode是可以重试的
    ErrorCode["RetryErrorCodeStart"] = "300000";
    // 流控相关
    ErrorCode["TooManyWaitAckMessage"] = "300001";
    // proxy 维度流控
    ErrorCode["TooManyOpenRequest"] = "300002";
    // 太多ack消息的qps clientToken 维度流控
    ErrorCode["TooManyAckRequest"] = "300003";
    // 太多写入消息的qps clientToken 维度流控
    ErrorCode["TooManySendRequest"] = "300004";
})(ErrorCode = exports.ErrorCode || (exports.ErrorCode = {}));
//# sourceMappingURL=errors.js.map