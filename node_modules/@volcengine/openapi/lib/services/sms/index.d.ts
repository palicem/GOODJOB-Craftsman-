import Service from "../../base/service";
import { ServiceOptions } from "../../base/types";
import { BatchSendSmsParams, SendSmsParams, ConversionParams, ConversionResponse, CheckVerifyCodeParams, CheckVerifyCodeResponse, SendVerifyCodeParams, SendVerifyCodeResponse, SendSmsResponse, BatchSendSmsResponse, ApplyVmsTemplateParams, ApplyVmsTemplateResponse, GetVmsTemplateStatusParams, GetVmsTemplateStatusResponse, GetSmsTemplateAndOrderListParams, GetSmsTemplateAndOrderListResponse, ApplySmsTemplateParams, ApplySmsTemplateResponse, DeleteSmsTemplateParams, DeleteSmsTemplateResponse, GetSubAccountListParams, GetSubAccountListResponse, GetSubAccountDetailParams, GetSubAccountDetailResponse, InsertSmsSubAccountParams, InsertSmsSubAccountResponse, ApplySmsSignatureParams, ApplySmsSignatureResponse, DeleteSignatureParams, DeleteSignatureResponse, GetSignatureAndOrderListParams, GetSignatureAndOrderListResponse } from "./types";
export declare class SmsService extends Service {
    constructor(options?: ServiceOptions);
    /** sms group */
    Send: (requestData: SendSmsParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<SendSmsResponse>>;
    BatchSend: (requestData: BatchSendSmsParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<BatchSendSmsResponse>>;
    Conversion: (requestData: ConversionParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<ConversionResponse>>;
    SendVerifyCode: (requestData: SendVerifyCodeParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<SendVerifyCodeResponse>>;
    CheckVerifyCode: (requestData: CheckVerifyCodeParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<CheckVerifyCodeResponse>>;
    ApplyVmsTemplate: (requestData: ApplyVmsTemplateParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<ApplyVmsTemplateResponse>>;
    GetVmsTemplateStatus: (requestData: GetVmsTemplateStatusParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<GetVmsTemplateStatusResponse>>;
    SendVms: (requestData: SendSmsParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<SendSmsResponse>>;
    GetSmsTemplateAndOrderList: (requestData: GetSmsTemplateAndOrderListParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<GetSmsTemplateAndOrderListResponse>>;
    ApplySmsTemplate: (requestData: ApplySmsTemplateParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<ApplySmsTemplateResponse>>;
    DeleteSmsTemplate: (requestData: DeleteSmsTemplateParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<DeleteSmsTemplateResponse>>;
    GetSubAccountList: (requestData: GetSubAccountListParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<GetSubAccountListResponse>>;
    GetSubAccountDetail: (requestData: GetSubAccountDetailParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<GetSubAccountDetailResponse>>;
    InsertSmsSubAccount: (requestData: InsertSmsSubAccountParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<InsertSmsSubAccountResponse>>;
    GetSignatureAndOrderList: (requestData: GetSignatureAndOrderListParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<GetSignatureAndOrderListResponse>>;
    ApplySmsSignature: (requestData: ApplySmsSignatureParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<ApplySmsSignatureResponse>>;
    DeleteSignature: (requestData: DeleteSignatureParams, params?: (import("../../base/types").FetchParams & import("axios").AxiosRequestConfig) | undefined, options?: import("../../base/types").ServiceOptionsBase | undefined) => Promise<import("../../base/types").OpenApiResponse<DeleteSignatureResponse>>;
}
export declare const defaultService: SmsService;
