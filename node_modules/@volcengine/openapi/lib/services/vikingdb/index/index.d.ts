import { AbstractService } from "../abstractService";
import { VikingdbResponse } from "../types";
import { type CreateIndexRequest, type DropIndexRequest, type GetIndexInfoRequest, GetIndexInfoResponse, type ListIndexesRequest, ListIndexesResponse, type UpdateIndexRequest } from "./types";
export declare class IndexService extends AbstractService {
    DropIndex({ CollectionName, IndexName }: DropIndexRequest): Promise<VikingdbResponse>;
    private decodeVectorIndex;
    private decodeIndexInfo;
    GetIndexInfo({ CollectionName, IndexName, }: GetIndexInfoRequest): Promise<GetIndexInfoResponse>;
    ListIndexes({ CollectionName }: ListIndexesRequest): Promise<ListIndexesResponse>;
    private encodeShardConfig;
    CreateIndex({ CollectionName, CpuQuota, Description, IndexName, PartitionBy, ScalarIndexes, ShardConfig, VectorIndex, }: CreateIndexRequest): Promise<VikingdbResponse>;
    UpdateIndex({ CollectionName, ShardConfig, CpuQuota, Description, IndexName, ScalarIndexes, }: UpdateIndexRequest): Promise<VikingdbResponse>;
}
export * as index from "./types";
