export type LogType = "ERROR" | "INFO" | "WARN" | "DEBUG";
export declare enum LogLevel {
    DEBUG = 0,
    INFO = 1,
    WARN = 2,
    ERROR = 3
}
export interface LoggerConfig {
    namespace: string;
}
export interface LogParams {
    timeSpent?: number;
    payload?: Record<string, any>;
}
export interface FormatConfig {
    logType: LogType;
}
export default class Logger {
    private _namespace;
    private _logLevel;
    constructor(config: LoggerConfig);
    error(msg: string, params?: LogParams): void;
    warn(msg: string, params?: LogParams): void;
    info(msg: string, params?: LogParams): void;
    debug(msg: string, params?: LogParams): void;
    private _formatLog;
    private _print;
    private getLogLevel;
}
