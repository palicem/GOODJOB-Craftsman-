import { AbstractService } from "../abstractService";
import { type DataParams, EmbeddingResponse, type ModelParams } from "./types";
export declare class EmbeddingService extends AbstractService {
    Embedding(modelParams: ModelParams<never>, dataParams: DataParams[]): Promise<EmbeddingResponse<never>>;
    Embedding(modelParams: ModelParams<"ReturnDense">, dataParams: DataParams[]): Promise<EmbeddingResponse<"SentenceDenseEmbedding">>;
    Embedding(modelParams: ModelParams<"ReturnSparse">, dataParams: DataParams[]): Promise<EmbeddingResponse<"SentenceSparseEmbedding">>;
    Embedding(modelParams: ModelParams<"ReturnTokenUsage">, dataParams: DataParams[]): Promise<EmbeddingResponse<"TokenUsage">>;
    Embedding(modelParams: ModelParams<"ReturnDense" | "ReturnSparse">, dataParams: DataParams[]): Promise<EmbeddingResponse<"SentenceDenseEmbedding" | "SentenceSparseEmbedding">>;
    Embedding(modelParams: ModelParams<"ReturnDense" | "ReturnTokenUsage">, dataParams: DataParams[]): Promise<EmbeddingResponse<"SentenceDenseEmbedding" | "TokenUsage">>;
    Embedding(modelParams: ModelParams<"ReturnSparse" | "ReturnTokenUsage">, dataParams: DataParams[]): Promise<EmbeddingResponse<"SentenceSparseEmbedding" | "TokenUsage">>;
    Embedding(modelParams: ModelParams<"ReturnDense" | "ReturnSparse" | "ReturnTokenUsage">, dataParams: DataParams[]): Promise<EmbeddingResponse<"SentenceDenseEmbedding" | "SentenceSparseEmbedding" | "TokenUsage">>;
}
export * as embedding from "./types";
